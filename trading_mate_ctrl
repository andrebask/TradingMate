#!/bin/bash

# Directories
SCRIPT_DIR=$(dirname "$(readlink -f "$0")")
TRADINGMATE_DIR=$HOME/.TradingMate
LOG_DIR=$TRADINGMATE_DIR/log
DATA_DIR=$TRADINGMATE_DIR/data
CONFIG_DIR=$TRADINGMATE_DIR/config
INSTALL_DIR=/opt/TradingMate

# Files
SCRIPT_FILE=$SCRIPT_DIR/trading_mate_ctrl
REQUIREMENTS_FILE=$SCRIPT_DIR/requirements.txt
PID_FILE=$LOG_DIR/pid.txt
CONFIG_FILE=$CONFIG_DIR/config.json
MAIN_BIN="$INSTALL_DIR/main.py"
RUN_COMMAND="$(command -v python3) -u $MAIN_BIN"


start()
{
  if [ "$SCRIPT_DIR" != "$INSTALL_DIR" ]
  then
    echo Please install TradingMate: ./trading_mate_ctrl install
    exit 1
  fi

  $RUN_COMMAND & echo $! > $PID_FILE
  echo TradingMate started
}

stop()
{
  if [ "$SCRIPT_DIR" != "$INSTALL_DIR" ]
  then
    echo Please install TradingMate: ./trading_mate_ctrl install
    exit 1
  fi

  cat $PID_FILE | xargs kill
  rm $PID_FILE
  echo TradingMate stopped
}

install_deps()
{
  echo Installing dependencies...

  export DEBIAN_FRONTEND=noninteractive

  apt-get update

  # Require Python version 3
  install_package "python3" "python3"

  # Require Python Tkinter
  if ! dpkg -s python3-tk >/dev/null 2>&1;
  then
    echo Tkinter not found!
    echo Installing package python3-tk...
    apt-get install -y python3-tk
  else
    echo Found Tkinter
  fi

  # Require Pip version 3
  install_package "python3-pip" "pip3"

  # Require rsync to copy files
  install_package "rsync" "rsync"

  # Install all python dependencies
  $(command -v pip3) install -r $REQUIREMENTS_FILE
}

install_package()
{
  # $1=package name, $2=binary name
  echo Required package: $1 - $2
  if ! [ -x "$(command -v $2)" ];
  then
    echo $2 not found!
    echo Installing package $1...
    apt-get install -y $1
  else
    echo Found $2: $(command -v $2)
  fi
}

test()
{
  if [ "$SCRIPT_DIR" == "$INSTALL_DIR" ]
  then
    echo Testing is disabled after installation!
    exit 1
  fi

  echo Running unit test with pytest...
  install_deps
  pytest
  echo Testing documentation build...
  sphinx-build -nWT -b dummy docs docs/_build/html
}

docs()
{
  if [ "$SCRIPT_DIR" == "$INSTALL_DIR" ]
  then
    echo Documentation build is disabled after installation!
    exit 1
  fi

  echo Building Sphinx documentation...
  sphinx-build -nWT -b html docs docs/_build/html
}

test_docker()
{
  if [ "$SCRIPT_DIR" == "$INSTALL_DIR" ]
  then
    echo Testing is disabled after installation!
    exit 1
  fi

  echo Running unit test with pytest in a Docker container...
  echo Testing against Python 3.4...
  docker run -it --rm -v $(pwd):/app -w "/app" python:3.4 /bin/bash -cx "./trading_mate_ctrl test"
  echo Testing against Python 3.5...
  docker run -it --rm -v $(pwd):/app -w "/app" python:3.5 /bin/bash -cx "./trading_mate_ctrl test"
  echo Testing against Python 3.6...
  docker run -it --rm -v $(pwd):/app -w "/app" python:3.6 /bin/bash -cx "./trading_mate_ctrl test"
  echo Testing against Python 3 latest...
  docker run -it --rm -v $(pwd):/app -w "/app" python:3 /bin/bash -cx "./trading_mate_ctrl test"
}

setup()
{
  # Check if setup has been called from the repo folder
  if [ "$SCRIPT_DIR" == "$INSTALL_DIR" ]
  then
    echo You have already installed TradingMate
    exit 1
  else
    echo Installing TradingMate...
  fi

  # Check if setup has been called with sudo
  if ! [ "$USER" == "root" ];
  then
    echo Setup requires sudo privileges
    exit 1
  fi

  # Install dependencies
  install_deps

  echo Removing any previous installation...
  rm -rf $INSTALL_DIR

  echo Copying files...
  # Create installation directory
  mkdir -p $INSTALL_DIR
  # Copy sources in installation directory
  rsync -am --include='*.py' --include='*.png' -f 'hide,! */' $SCRIPT_DIR/src/ $INSTALL_DIR
  # Copy scripts too
  rsync -am $SCRIPT_FILE $INSTALL_DIR
  rsync -am $REQUIREMENTS_FILE $INSTALL_DIR
  # Create TradingMate user folder
  mkdir -p $TRADINGMATE_DIR
  mkdir -p $CONFIG_DIR
  mkdir -p $LOG_DIR
  mkdir -p $DATA_DIR
  # Copy config file
  rsync -am -p $SCRIPT_DIR/config/config.json $CONFIG_FILE

  chown -R $SUDO_USER: $TRADINGMATE_DIR
  chown -R $SUDO_USER: $INSTALL_DIR

  echo Installation successful!
}

help()
{
  echo "Try with:"
  echo "  help - Show this help message"
  echo "  start - Start TradingMate"
  echo "  stop - Stop TradingMate"
  echo "  test - Run TradingMate automatic test suite"
  echo "  test_docker - Run TradingMate automatic test suite inside docker containers"
  echo "  docs - Build TradingMate documentation"
  echo "  setup - Install TradingMate"
}

case $1 in
  start) start;;
  stop) stop;;
  test) test;;
  test_docker) test_docker;;
  docs) docs;;
  setup) setup;;
  *) help;;
esac
